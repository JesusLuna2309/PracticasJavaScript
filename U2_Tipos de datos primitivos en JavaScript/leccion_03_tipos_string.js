const stringEjemplo = 'Hola, mundo!'; // Esto es un String
console.log("Ejemplo de String:", stringEjemplo); //Salida: Hola, mundo!

// Tambi√©n se pueden usar comillas dobles
const stringEjemploDoble = "Hola, mundo con comillas dobles!";
console.log("Ejemplo de String con comillas dobles:", stringEjemploDoble); //Salida: Hola, mundo con comillas dobles!

let stringEjemploComillasSimples = 'Este es un string con comillas "simples"'; // Se pueden usar comillas simples dentro de comillas dobles
console.log("Ejemplo de String con comillas simples:", stringEjemploComillasSimples); //Salida: Este es un string con comillas "simples"

// Tambi√©n se pueden usar comillas simples dentro de comillas dobles
stringEjemploComillasDobles = "Este es un string con comillas 'dobles'";
console.log("Ejemplo de String con comillas dobles:", stringEjemploComillasDobles); //Salida: Este es un string con comillas 'dobles'

// Se pueden usar comillas invertidas (template literals) para crear strings multil√≠nea o interpolar variables
const nombre = "Natalia";
const stringTemplate = `Hola, ${nombre}!`; // Interpolaci√≥n de variables
console.log("Ejemplo de String con template literals:", stringTemplate); //Salida: Hola, Natalia!

// Tambi√©n se pueden crear strings multil√≠nea
const stringMultilinea = `Este es un string
multil√≠nea que se extiende por varias l√≠neas.`;
console.log("Ejemplo de String multil√≠nea:", stringMultilinea); 
//Salida: Este es un string multil√≠nea que se extiende por varias l√≠neas.

// Tambi√©n se pueden usar caracteres de escape para incluir comillas dentro de un string
const stringConEscape = 'Este es un string con comillas \'simples\' y "dobles"';
console.log("Ejemplo de String con caracteres de escape:", stringConEscape);    //Salida: Este es un string con comillas 'simples' y "dobles"   

// Tambi√©n se pueden usar caracteres especiales como el salto de l√≠nea
const stringConSaltoDeLinea = "Este es un string con un salto de l√≠nea.\nAqu√≠ contin√∫a en una nueva l√≠nea.";
console.log("Ejemplo de String con salto de l√≠nea:", stringConSaltoDeLinea);    //Salida: Este es un string con un salto de l√≠nea.
                                                                                // Aqu√≠ contin√∫a en una nueva l√≠nea.
// Tambi√©n se pueden usar caracteres Unicode
const stringConUnicode = "Aqu√≠ hay un emoji: \u{1F600}"; // Emoji de cara sonriente
console.log("Ejemplo de String con Unicode:", stringConUnicode); //Salida: Aqu√≠ hay un emoji: üòÄ

// Tambi√©n se pueden usar m√©todos de String
const stringMetodo = "JavaScript es genial!";
console.log("Longitud del string:", stringMetodo.length); //Salida: Longitud del string: 22
console.log("String en may√∫sculas:", stringMetodo.toUpperCase()); //Salida: String en may√∫sculas: JAVASCRIPT ES GENIAL!
console.log("String en min√∫sculas:", stringMetodo.toLowerCase()); //Salida: String en min√∫sculas: javascript es genial!

// Concatenaci√≥n de strings
const string1 = "Hola";
const string2 = "mundo!";
const stringConcatenado = string1 + " " + string2;
console.log("Ejemplo de concatenaci√≥n de strings:", stringConcatenado); //Salida: Ejemplo de concatenaci√≥n de strings: Hola mundo!

// Verificaci√≥n de igualdad de strings
const stringA = "JavaScript";
const stringB = "JavaScript";
console.log("¬øSon iguales los strings?", stringA === stringB); //Salida: ¬øSon iguales los strings? true 

// Comparaci√≥n de strings
const stringC = "A";
const stringD = "B";
console.log("¬øEs stringC menor que stringD?", stringC < stringD); //Salida: ¬øEs stringC menor que stringD? true

// Verificaci√≥n de si un string contiene otro string
const stringBusqueda = "JavaScript es genial!";
console.log("¬øContiene 'JavaScript'?", stringBusqueda.includes("JavaScript")); //Salida: ¬øContiene 'JavaScript'? true   

// Verificaci√≥n de si un string comienza o termina con otro string
console.log("¬øComienza con 'JavaScript'?", stringBusqueda.startsWith("JavaScript")); //Salida: ¬øComienza con 'JavaScript'? true
console.log("¬øTermina con 'genial!'?", stringBusqueda.endsWith("genial!")); //Salida: ¬øTermina con 'genial!'? true

